import telebot
import requests
import json

from os import getenv
from googleapiclient.discovery import build

CURRENCY_RATES_FILE = "currency_rates.json"

TELEGRAM_API_KEY = getenv('PAVEL_TELEGRAM_API_KEY')
APILAYER_API_KEY = getenv('APILAYER_API_KEY')
FINNHUB_API_KEY = getenv('FINNHUB_API_KEY')
YT_API_KEY = getenv('GOOGLE_API_KEY')

bot = telebot.TeleBot(TELEGRAM_API_KEY)


def get_currency_rate(currency: str) -> dict:
    """–ü–æ–ª—É—á–∞–µ—Ç –∫—É—Ä—Å –≤–∞–ª—é—Ç—ã –æ—Ç API –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –µ–≥–æ –≤ –≤–∏–¥–µ float"""

    url = f"https://api.apilayer.com/exchangerates_data/latest?base={currency}"
    response = requests.get(url, headers={'apikey': APILAYER_API_KEY})
    response_data = json.loads(response.text)
    return response_data


def get_crypro_price(crypto: str) -> str:
    params = {
        'symbol': f'BINANCE:{crypto}',
        'resolution': 1,
        'token': FINNHUB_API_KEY
    }
    url = "https://finnhub.io/api/v1/crypto/candle"
    response = requests.get(url, params=params)
    data_candles = json.loads(response.text)
    return data_candles['c'][-1]


def get_youtube_service() -> build:
    """–°–æ–∑–¥–∞–µ—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—ä–µ–∫—Ç YouTube API service, –∏—Å–ø–æ–ª—å–∑—É—è –∫–ª—é—á API –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è."""
    youtube = build('youtube', 'v3', developerKey=YT_API_KEY)
    return youtube


def get_search_results(query: str) -> list[dict]:
    """–í—ã–ø–æ–ª–Ω—è–µ—Ç –ø–æ–∏—Å–∫ –≤–∏–¥–µ–æ –≤ YouTube –ø–æ –∑–∞–¥–∞–Ω–Ω–æ–º—É –∑–∞–ø—Ä–æ—Å—É –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤–∏–¥–µ–æ."""

    youtube = get_youtube_service()
    search_response = youtube.search().list(
        q=query,
        type='video',
        part='id,snippet',
        maxResults=5
    ).execute()

    videos = []
    for search_result in search_response.get('items', []):
        video_id = search_result['id']['videoId']
        video_info = youtube.videos().list(
            id=video_id,
            part='snippet,statistics'
        ).execute()

        video = {
            'video_id': video_id,
            'title': video_info['items'][0]['snippet']['title'],
            'channel_title': video_info['items'][0]['snippet']['channelTitle'],
            'view_count': int(video_info['items'][0]['statistics']['viewCount']),
            'like_count': int(video_info['items'][0]['statistics']['likeCount'])
        }
        videos.append(video)

    return videos


def format_video_info(video_info: dict) -> dict:
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∏–¥–µ–æ –¥–ª—è –≤—ã–≤–æ–¥–∞ –≤ –∫–æ–Ω—Å–æ–ª—å –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª–æ–≤–∞—Ä—å —Å–æ –≤—Å–µ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –≤–∏–¥–µ–æ."""

    formatted_video_info = {
        'title': f"{video_info['title'][:35]}..." if len(video_info['title']) > 35 else video_info['title'],
        'view_count': video_info['view_count'],
        'like_count': video_info['like_count'],
        'ratio': f"{round(video_info['ratio'] * 100, 1)} %",
        'url': f"<https://www.youtube.com/watch?v={video_info['video_id']}>"
    }
    return formatted_video_info


def print_video_info(video_info: dict) -> str:
    """–ü–µ—á–∞—Ç–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∏–¥–µ–æ –≤ –∫–æ–Ω—Å–æ–ª—å –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏ —Ç–∞–±–ª–∏—Ü—ã."""
    return f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤: {video_info['view_count']:<10}\n" \
           f"–õ–∞–π–∫–æ–≤: {video_info['like_count']:<6}\n" \
           f"–†–µ–π—Ç–∏–Ω–≥: {video_info['ratio']:<7}\n" \
           f"–°—Å—ã–ª–∫–∞: {video_info['url']:<35}\n"


# def save_to_json(data_to_save: dict):
#     """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –≤ JSON-—Ñ–∞–π–ª"""
#     with open(CURRENCY_RATES_FILE) as json_file:
#         data = json.load(json_file)
#     if round(data['rates']['RUB'], 2) == round(data_to_save['rates']['RUB'], 2):
#         return False
#     else:
#         with open(CURRENCY_RATES_FILE, "w") as json_file:
#             json.dump(data_to_save, json_file)
#     return True
#

@bot.message_handler(commands=['start'])
def start(message) -> None:
    """
    –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –±–æ—Ç–∞
    :param message: –æ–±—ä–µ–∫—Ç message
    :return: None
    """
    markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = telebot.types.KeyboardButton("üëã –ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è —Å –ü–∞–≤–ª–æ–º")
    markup.add(btn1)
    bot.send_message(message.from_user.id, f"üëã–ü—Ä–∏–≤–µ—Ç <b>{message.from_user.first_name}</b>! –ú–µ–Ω—è –∑–æ–≤—É—Ç –ü–∞–≤–µ–ªüëã \n "
                                           f"–Ø –±–æ—Ç.–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É —Å–Ω–∏–∑—É —á—Ç–æ–±—ã –ø–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è —Å–æ "
                                           f"–º–Ω–æ–π", reply_markup=markup, parse_mode='html')


@bot.message_handler(content_types=['text'])
def get_text_messages(message) -> None:
    """
    –û—Å–Ω–æ–≤–Ω—ã–µ —Ä–∞–∑–¥–µ–ª—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã
    :param message: –æ–±—ä–µ–∫—Ç message
    :return: None
    """
    if message.text == 'üëã –ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è —Å –ü–∞–≤–ª–æ–º' or message.text == '–í –º–µ–Ω—é' or message.text == '–Ω–∞–∑–∞–¥':
        markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
        btn1 = telebot.types.KeyboardButton('–í–∞–ª—é—Ç—ã')
        btn2 = telebot.types.KeyboardButton('–ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã')
        btn3 = telebot.types.KeyboardButton('Youtube')
        markup.add(btn1, btn2, btn3)
        bot.send_message(message.from_user.id, '<b>–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ä–∞–∑–¥–µ–ª</b>',
                         reply_markup=markup, parse_mode='html')
    elif message.text in ['–í–∞–ª—é—Ç—ã', '–ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã', 'Youtube']:
        commands(message)
    elif message.text == '–î–æ–ª–ª–∞—Ä':
        data = get_currency_rate("USD")
        bot.send_message(message.from_user.id, f"–ó–∞ 1 –¥–æ–ª–ª–∞—Ä —Å–µ–π—á–∞—Å –¥–∞—é—Ç {round(data['rates']['RUB'], 2)}—Ä.")
    elif message.text == '–ï–≤—Ä–æ':
        data = get_currency_rate("EUR")
        bot.send_message(message.from_user.id, f"–ó–∞ 1 –µ–≤—Ä–æ —Å–µ–π—á–∞—Å –¥–∞—é—Ç {round(data['rates']['RUB'], 2)}—Ä.")
    elif message.text == '–§—É–Ω—Ç —Å—Ç–µ—Ä–ª–∏–Ω–≥–æ–≤':
        data = get_currency_rate("GBP")
        bot.send_message(message.from_user.id, f"–ó–∞ 1 —Ñ—É–Ω—Ç —Å—Ç–µ—Ä–ª–∏–Ω–≥–æ–≤ —Å–µ–π—á–∞—Å –¥–∞—é—Ç {round(data['rates']['RUB'], 2)}—Ä.")
    elif message.text == 'Bitcoin':
        data = get_crypro_price("BTCUSDT")
        bot.send_message(message.from_user.id, f"–ó–∞ 1 BTC —Å–µ–π—á–∞—Å –¥–∞—é—Ç {data} USDT")
    elif message.text == 'Etherium':
        data = get_crypro_price("ETHUSDT")
        bot.send_message(message.from_user.id, f"–ó–∞ 1 ETH —Å–µ–π—á–∞—Å –¥–∞—é—Ç {data} USDT")
    elif message.text == 'Litecoin':
        data = get_crypro_price("LTCUSDT")
        bot.send_message(message.from_user.id, f"–ó–∞ 1 LTC —Å–µ–π—á–∞—Å –¥–∞—é—Ç {data} USDT")
    else:
        videos = get_search_results(message.text)
        for video in videos:
            video.update({'ratio': video['like_count'] / video['view_count']})
        video_stats_sorted = sorted(videos, key=lambda x: x['ratio'], reverse=True)
        for i in range(5):
            video_info = format_video_info(video_stats_sorted[i])
            bot.send_message(message.from_user.id, print_video_info(video_info))
        bot.send_message(message.from_user.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å. –í–≤–µ–¥–∏—Ç–µ '–Ω–∞–∑–∞–¥'"
                                               " –¥–ª—è –≤—ã—Ö–æ–¥–∞ –∏–∑ —Ä–µ–∂–∏–º–∞ –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ youtube")


def commands(message):
    if message.text == "–í–∞–ª—é—Ç—ã":
        markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
        btn1 = telebot.types.KeyboardButton('–î–æ–ª–ª–∞—Ä')
        btn2 = telebot.types.KeyboardButton('–ï–≤—Ä–æ')
        btn3 = telebot.types.KeyboardButton('–§—É–Ω—Ç —Å—Ç–µ—Ä–ª–∏–Ω–≥–æ–≤')
        btn4 = telebot.types.KeyboardButton('–í –º–µ–Ω—é')
        markup.add(btn1, btn2, btn3, btn4)
        bot.send_message(message.from_user.id, '<b>–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞–ª—é—Ç—É</b>',
                         reply_markup=markup, parse_mode='html')
    elif message.text == "–ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã":
        markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
        btn1 = telebot.types.KeyboardButton('Bitcoin')
        btn2 = telebot.types.KeyboardButton('Etherium')
        btn3 = telebot.types.KeyboardButton('Litecoin')
        btn4 = telebot.types.KeyboardButton('–í –º–µ–Ω—é')
        markup.add(btn1, btn2, btn3, btn4)
        bot.send_message(message.from_user.id, '<b>–í—ã–±–µ—Ä–∏—Ç–µ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—É</b>',
                         reply_markup=markup, parse_mode='html')
    elif message.text == "Youtube":
        bot.send_message(message.from_user.id, '<b>–í–≤–µ–¥–∏—Ç–µ –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –≤ —Å—Ç—Ä–æ–∫–µ</b>', parse_mode='html')
        bot.send_message(message.from_user.id, '<b>–ë—É–¥–µ—Ç –≤—ã–≤–µ–¥–µ–Ω–æ 5 —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤</b>', parse_mode='html')
        bot.send_message(message.from_user.id, '<b>–ö–∞–∂–¥–æ–µ –≤–∏–¥–µ–æ —Å–æ —Å–≤–æ–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤,'
                                               '–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –ª–∞–π–∫–æ–≤, –∏ —Ä–µ–π—Ç–∏–Ω–≥–æ–º </b>', parse_mode='html')


bot.polling(none_stop=True, timeout=0)  # –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞—è –¥–ª—è —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞ —á–∞—Å—Ç—å
